<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

    <!--classPathEntry 元素用于添加运行类路径位置到类路径中，加载数据库驱动依赖的jar包 -->
    <!--<classPathEntry location="C:\Users\79974\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar" />-->
    <!--defaultModelType 该属性用于生成模型类型 value有conditional、flat、hierarchical
        conditional 默认值：如果一个表只有一个主键字段，则会把这个主键合并到基本记录类中
        flat：会为每个表生成唯一的一个雷，这个类中会包含表中所有的字段
        hierarchical：会为包含主键的表单独生成一个主键类，并为包含BLOB类型的表生成一个类，其他字段再单独生成一个类

        targetRuntime:可使用自己的代码生成器，需继承org.mybatis.generator.api.IntrospectedTable
        introspectedColumnImpl 列信息需继承org.mybatis.generator.api.IntrospectedColumn
    -->
    <context id="testTables" defaultModelType="flat" targetRuntime="Mybatis3Simple">
        <!--<property name="beginningDelimiter" value="&#45;&#45;"/>-->
        <!--<property name="endingDelimiter" value="\n"/>-->
        <commentGenerator>
            <!--是否去除自动生成的注释true：是，  false： 否-->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/jiangyun_ops?serverTimezone=UTC"
                        userId="root"
                        password="123">
        </jdbcConnection>

        <!--默认为false 把JDBC DECIMAL和NUMERIC类型解析为INTEGER ，
            为true时将其解析为java.math.BigDecimal-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="true"/>
        </javaTypeResolver>

        <!--生成po类的位置-->
        <javaModelGenerator targetPackage="com.dandan.mybatis.generator.pojo" targetProject=".\src">
            <!--enableSubPackages：s是否让schema作为包的后缀-->
            <property name="enableSubPackages" value="true"/>
            <!--从数据库返回的值被清理前后的空格-->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!--targetProject：mapper映射文件生成的位置-->
        <!-- 如果maven工程只是单独的一个工程，targetProject="src/main/java"
           若果maven工程是分模块的工程，targetProject="所属模块的名称"，例如：
           targetProject="ecps-manager-mapper"，下同-->
        <sqlMapGenerator targetPackage="com.dandan.mybatis.generator.mapper" targetProject=".\src">
            <!--enableSubPackages：s是否让schema作为包的后缀-->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>
        <!--mapper接口生成的位置-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.dandan.mybatis.generator.IMapper" targetProject=".\src">
            <!--enableSubPackages：s是否让schema作为包的后缀-->
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--tableName="%" %为SQL通配符匹配多个表
            domainObjectName:生成对象的基本名称-->
        <table tableName="t_order" domainObjectName="Order"
               delimitAllColumns="true">
            <columnOverride column="is_agent_charge" property="agentCharge" jdbcType="CHAR" javaType="Bool"/>
        </table>

    </context>
</generatorConfiguration>